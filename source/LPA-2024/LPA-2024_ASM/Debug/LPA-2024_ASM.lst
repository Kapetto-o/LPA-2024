Microsoft (R) Macro Assembler Version 14.41.34120.0	    12/18/24 14:24:21
LPA-2024_ASM.asm					     Page 1 - 1


				.586
				.model flat, stdcall
				includelib libucrt.lib
				includelib kernel32.lib

				ExitProcess		PROTO :DWORD 
				SYSPAUSE		PROTO 
				soutl			PROTO :BYTE 
				noutl			PROTO :SDWORD 
				_strduplicate	PROTO :BYTE, :BYTE 
				_strlength		PROTO :BYTE 
				_strtransint	PROTO :BYTE 

				.STACK 4096

 00000000			.CONST
 00000000 45 52 52 4F 52		null_division BYTE 'ERROR: DIVISION BY ZERO', 0
	   3A 20 44 49 56
	   49 53 49 4F 4E
	   20 42 59 20 5A
	   45 52 4F 00
 00000018 45 52 52 4F 52		OVER_FLOW BYTE 'ERROR: OVERFLOW', 0
	   3A 20 4F 56 45
	   52 46 4C 4F 57
	   00
 00000028 74 72 75 65 00		true BYTE 'true', 0
 0000002D 66 61 6C 73 65		false BYTE 'false', 0
	   00
 00000033 00000005			short0 SDWORD 5
 00000037 00000000			short1 SDWORD 0
 0000003B 00000001			short2 SDWORD 1
 0000003F 74 65 73 74 73		str3 BYTE "teststring", 0
	   74 72 69 6E 67
	   00
 0000004A 00000001			bool4 DWORD 1
 0000004E C0 F0 E8 F4 EC		str5 BYTE "Арифметические операции:", 0
	   E5 F2 E8 F7 E5
	   F1 EA E8 E5 20
	   EE EF E5 F0 E0
	   F6 E8 E8 3A 00
 00000067 0000000F			short6 SDWORD 15
 0000006B 0000000A			short7 SDWORD 10
 0000006F 00000005			short8 SDWORD 5
 00000073 D3 EC ED EE E6		str9 BYTE "Умножение:", 0
	   E5 ED E8 E5 3A
	   00
 0000007E 0000000A			short10 SDWORD 10
 00000082 00000005			short11 SDWORD 5
 00000086 C4 E5 EB E5 ED		str12 BYTE "Деление:", 0
	   E8 E5 3A 00
 0000008F 0000000F			short13 SDWORD 15
 00000093 0000000A			short14 SDWORD 10
 00000097 C4 E5 EB E5 ED		str15 BYTE "Деление с остатком:", 0
	   E8 E5 20 F1 20
	   EE F1 F2 E0 F2
	   EA EE EC 3A 00
 000000AB 0000000A			short16 SDWORD 10
 000000AF 00000005			short17 SDWORD 5
 000000B3 D1 F3 EC EC E0		str18 BYTE "Сумма:", 0
	   3A 00
 000000BA 0000000A			short19 SDWORD 10
 000000BE 00000005			short20 SDWORD 5
 000000C2 D0 E0 E7 ED E8		str21 BYTE "Разница:", 0
	   F6 E0 3A 00
 000000CB 00000005			short22 SDWORD 5
 000000CF 00000005			short23 SDWORD 5
 000000D3 00000005			short24 SDWORD 5
 000000D7 CF F0 E8 EE F0		str25 BYTE "Приоритет (=30):", 0
	   E8 F2 E5 F2 20
	   28 3D 33 30 29
	   3A 00
 000000E8 00000005			short26 SDWORD 5
 000000EC 00000005			short27 SDWORD 5
 000000F0 00000005			short28 SDWORD 5
 000000F4 CF F0 E8 EE F0		str29 BYTE "Приоритет (=2):", 0
	   E8 F2 E5 F2 20
	   28 3D 32 29 3A
	   00
 00000104 54 65 73 74 54		str30 BYTE "TestText1", 0
	   65 78 74 31 00
 0000010E 00000000			short31 SDWORD 0
 00000112 00000005			short32 SDWORD 5
 00000116 00000001			short33 SDWORD 1
 0000011A 0000000A			short34 SDWORD 10
 0000011E D2 E5 F1 F2 EE		str35 BYTE "Тестовая строчка", 0
	   E2 E0 FF 20 F1
	   F2 F0 EE F7 EA
	   E0 00
 0000012F 31 32 35 00			str36 BYTE "125", 0
 00000133 00000000			short37 SDWORD 0
 00000137 0000000A			short38 SDWORD 10
 0000013B 00000001			short39 SDWORD 1
 00000000			.DATA
 00000000 00000000			res10 SDWORD 0
 00000004 00000000			phah31 DWORD 0
 00000008 00000000			it50 SDWORD 0
 0000000C 00000000			st50 DWORD ?
 00000010 00000000			bt50 DWORD 0
 00000014 00000000			a50 SDWORD 0
 00000018 00000000			b50 SDWORD 0
 0000001C 00000000			parm150 DWORD ?
 00000020 00000000			number50 SDWORD 0
 00000024 00000000			pravda50 DWORD 0
 00000028 00000000			stroka50 DWORD ?
 0000002C 00000000			strokachislo50 DWORD ?
 00000030 00000000			copystr50 DWORD ?
 00000034 00000000			dlina50 SDWORD 0
 00000038 00000000			strchislo50 SDWORD 0
 0000003C 00000000			i50 SDWORD 0

 00000000			.CODE

 00000000			testfunc11 PROC a1 : SDWORD, b1 : SDWORD
 00000003  FF 75 08			push a1
 00000006  FF 75 0C			push b1
 00000009  58				pop eax
 0000000A  5B				pop ebx
 0000000B  03 C3			add eax, ebx
 0000000D  50				push eax
 0000000E  58				pop eax
 0000000F  3D 00007FFF			cmp eax, 32767
 00000014  0F 8F 0000043C		jg overflow
 0000001A  3D FFFF8000			cmp eax, -32768
 0000001F  0F 8C 00000431		jl overflow
 00000025  A3 00000000 R		mov res10, eax
 0000002A  FF 35 00000000 R		push res10
 00000030  EB 00			jmp local0
 00000032			local0:
 00000032  58				pop eax
					ret
 00000037			testfunc11 ENDP

 00000037			testfunc22 PROC chetnoe2 : SDWORD
 0000003A  FF 75 08			push chetnoe2
 0000003D  5B				pop ebx
 0000003E  58				pop eax
 0000003F  83 FB 00			cmp ebx,0
 00000042  0F 84 00000402		je SOMETHINGWRONG
 00000048  99				cdq
 00000049  F7 FB			idiv ebx
 0000004B  52				push edx
 0000004C  FF 35 00000033 R		push short0
 00000052  FF 35 00000037 R		push short1
 00000058  8F 05 00000004 R		pop phah31
 0000005E  FF 35 00000004 R		push phah31
 00000064  EB 00			jmp local1
 00000066			local1:
 00000066  58				pop eax
					ret
 0000006B			testfunc22 ENDP

 0000006B			main PROC
 0000006B  FF 35 0000003B R		push short2
 00000071  58				pop eax
 00000072  3D 00007FFF			cmp eax, 32767
 00000077  0F 8F 000003D9		jg overflow
 0000007D  3D FFFF8000			cmp eax, -32768
 00000082  0F 8C 000003CE		jl overflow
 00000088  A3 00000008 R		mov it50, eax
 0000008D  68 0000003F R		push offset str3
 00000092  8F 05 0000000C R		pop st50
 00000098  FF 35 0000004A R		push bool4
 0000009E  8F 05 00000010 R		pop bt50

 000000A4  68 0000004E R	push offset str5
 000000A9  E8 00000000 E	call soutl
 000000AE  FF 35 00000067 R		push short6
 000000B4  58				pop eax
 000000B5  3D 00007FFF			cmp eax, 32767
 000000BA  0F 8F 00000396		jg overflow
 000000C0  3D FFFF8000			cmp eax, -32768
 000000C5  0F 8C 0000038B		jl overflow
 000000CB  A3 00000018 R		mov b50, eax
 000000D0  FF 35 0000006B R		push short7
 000000D6  FF 35 0000006F R		push short8
 000000DC  58				pop eax
 000000DD  5B				pop ebx
 000000DE  F7 E3			mul ebx
 000000E0  50				push eax
 000000E1  58				pop eax
 000000E2  3D 00007FFF			cmp eax, 32767
 000000E7  0F 8F 00000369		jg overflow
 000000ED  3D FFFF8000			cmp eax, -32768
 000000F2  0F 8C 0000035E		jl overflow
 000000F8  A3 00000014 R		mov a50, eax

 000000FD  68 00000073 R	push offset str9
 00000102  E8 00000000 E	call soutl

 00000107  FF 35 00000014 R	push a50
 0000010D  E8 00000000 E	call noutl
 00000112  FF 35 0000007E R		push short10
 00000118  FF 35 00000082 R		push short11
 0000011E  5B				pop ebx
 0000011F  58				pop eax
 00000120  83 FB 00			cmp ebx,0
 00000123  0F 84 00000321		je SOMETHINGWRONG
 00000129  99				cdq
 0000012A  F7 FB			idiv ebx
 0000012C  50				push eax
 0000012D  58				pop eax
 0000012E  3D 00007FFF			cmp eax, 32767
 00000133  0F 8F 0000031D		jg overflow
 00000139  3D FFFF8000			cmp eax, -32768
 0000013E  0F 8C 00000312		jl overflow
 00000144  A3 00000014 R		mov a50, eax

 00000149  68 00000086 R	push offset str12
 0000014E  E8 00000000 E	call soutl

 00000153  FF 35 00000014 R	push a50
 00000159  E8 00000000 E	call noutl
 0000015E  FF 35 0000008F R		push short13
 00000164  FF 35 00000093 R		push short14
 0000016A  5B				pop ebx
 0000016B  58				pop eax
 0000016C  83 FB 00			cmp ebx,0
 0000016F  0F 84 000002D5		je SOMETHINGWRONG
 00000175  99				cdq
 00000176  F7 FB			idiv ebx
 00000178  52				push edx
 00000179  58				pop eax
 0000017A  3D 00007FFF			cmp eax, 32767
 0000017F  0F 8F 000002D1		jg overflow
 00000185  3D FFFF8000			cmp eax, -32768
 0000018A  0F 8C 000002C6		jl overflow
 00000190  A3 00000014 R		mov a50, eax

 00000195  68 00000097 R	push offset str15
 0000019A  E8 00000000 E	call soutl

 0000019F  FF 35 00000014 R	push a50
 000001A5  E8 00000000 E	call noutl
 000001AA  FF 35 000000AB R		push short16
 000001B0  FF 35 000000AF R		push short17
 000001B6  58				pop eax
 000001B7  5B				pop ebx
 000001B8  03 C3			add eax, ebx
 000001BA  50				push eax
 000001BB  58				pop eax
 000001BC  3D 00007FFF			cmp eax, 32767
 000001C1  0F 8F 0000028F		jg overflow
 000001C7  3D FFFF8000			cmp eax, -32768
 000001CC  0F 8C 00000284		jl overflow
 000001D2  A3 00000014 R		mov a50, eax

 000001D7  68 000000B3 R	push offset str18
 000001DC  E8 00000000 E	call soutl

 000001E1  FF 35 00000014 R	push a50
 000001E7  E8 00000000 E	call noutl
 000001EC  FF 35 000000BA R		push short19
 000001F2  FF 35 000000BE R		push short20
 000001F8  5B				pop ebx
 000001F9  58				pop eax
 000001FA  2B C3			sub eax, ebx
 000001FC  50				push eax
 000001FD  58				pop eax
 000001FE  3D 00007FFF			cmp eax, 32767
 00000203  0F 8F 0000024D		jg overflow
 00000209  3D FFFF8000			cmp eax, -32768
 0000020E  0F 8C 00000242		jl overflow
 00000214  A3 00000014 R		mov a50, eax

 00000219  68 000000C2 R	push offset str21
 0000021E  E8 00000000 E	call soutl

 00000223  FF 35 00000014 R	push a50
 00000229  E8 00000000 E	call noutl
 0000022E  FF 35 000000CB R		push short22
 00000234  FF 35 000000CF R		push short23
 0000023A  FF 35 000000D3 R		push short24
 00000240  58				pop eax
 00000241  5B				pop ebx
 00000242  F7 E3			mul ebx
 00000244  50				push eax
 00000245  58				pop eax
 00000246  5B				pop ebx
 00000247  03 C3			add eax, ebx
 00000249  50				push eax
 0000024A  58				pop eax
 0000024B  3D 00007FFF			cmp eax, 32767
 00000250  0F 8F 00000200		jg overflow
 00000256  3D FFFF8000			cmp eax, -32768
 0000025B  0F 8C 000001F5		jl overflow
 00000261  A3 00000014 R		mov a50, eax

 00000266  68 000000D7 R	push offset str25
 0000026B  E8 00000000 E	call soutl

 00000270  FF 35 00000014 R	push a50
 00000276  E8 00000000 E	call noutl
 0000027B  FF 35 000000E8 R		push short26
 00000281  FF 35 000000EC R		push short27
 00000287  58				pop eax
 00000288  5B				pop ebx
 00000289  03 C3			add eax, ebx
 0000028B  50				push eax
 0000028C  FF 35 000000F0 R		push short28
 00000292  5B				pop ebx
 00000293  58				pop eax
 00000294  83 FB 00			cmp ebx,0
 00000297  0F 84 000001AD		je SOMETHINGWRONG
 0000029D  99				cdq
 0000029E  F7 FB			idiv ebx
 000002A0  50				push eax
 000002A1  58				pop eax
 000002A2  3D 00007FFF			cmp eax, 32767
 000002A7  0F 8F 000001A9		jg overflow
 000002AD  3D FFFF8000			cmp eax, -32768
 000002B2  0F 8C 0000019E		jl overflow
 000002B8  A3 00000014 R		mov a50, eax

 000002BD  68 000000F4 R	push offset str29
 000002C2  E8 00000000 E	call soutl

 000002C7  FF 35 00000014 R	push a50
 000002CD  E8 00000000 E	call noutl
 000002D2  68 00000104 R		push offset str30
 000002D7  8F 05 0000001C R		pop parm150
 000002DD  FF 35 0000010E R		push short31
 000002E3  FF 35 00000112 R		push short32
 000002E9  E8 FFFFFD12			call testfunc11
 000002EE  50				push eax
 000002EF  FF 35 00000116 R		push short33
 000002F5  58				pop eax
 000002F6  5B				pop ebx
 000002F7  03 C3			add eax, ebx
 000002F9  50				push eax
 000002FA  58				pop eax
 000002FB  3D 00007FFF			cmp eax, 32767
 00000300  0F 8F 00000150		jg overflow
 00000306  3D FFFF8000			cmp eax, -32768
 0000030B  0F 8C 00000145		jl overflow
 00000311  A3 00000020 R		mov number50, eax
 00000316  FF 35 0000011A R		push short34
 0000031C  E8 FFFFFD16			call testfunc22
 00000321  50				push eax
 00000322  8F 05 00000024 R		pop pravda50

 00000328  FF 35 00000020 R	push number50
 0000032E  E8 00000000 E	call noutl

 00000333  68 0000001C R	push offset parm150
 00000338  E8 00000000 E	call soutl
 0000033D  A1 00000024 R		mov eax, pravda50
 00000342  83 F8 00			cmp eax, 0
 00000345  74 02			jz pravda500T
 00000347  75 0C			jnz pravda500F

 00000349			pravda500T:
 00000349  68 0000002D R		push offset false
 0000034E  E8 00000000 E	call soutl
 00000353  EB 0A			jmp pravda500

 00000355			pravda500F:
 00000355  68 00000028 R		push offset true
 0000035A  E8 00000000 E	call soutl

 0000035F			pravda500:
 0000035F  68 0000011E R		push offset str35
 00000364  8F 05 00000028 R		pop stroka50
 0000036A  68 0000012F R		push offset str36
 0000036F  8F 05 0000002C R		pop strokachislo50
 00000375  FF 35 00000028 R		push stroka50
 0000037B  E8 00000000 E		call _strlength
 00000380  50				push eax
 00000381  58				pop eax
 00000382  3D 00007FFF			cmp eax, 32767
 00000387  0F 8F 000000C9		jg overflow
 0000038D  3D FFFF8000			cmp eax, -32768
 00000392  0F 8C 000000BE		jl overflow
 00000398  A3 00000034 R		mov dlina50, eax
 0000039D  FF 35 0000002C R		push strokachislo50
 000003A3  E8 00000000 E		call _strtransint
 000003A8  50				push eax
 000003A9  58				pop eax
 000003AA  3D 00007FFF			cmp eax, 32767
 000003AF  0F 8F 000000A1		jg overflow
 000003B5  3D FFFF8000			cmp eax, -32768
 000003BA  0F 8C 00000096		jl overflow
 000003C0  A3 00000038 R		mov strchislo50, eax

 000003C5  68 00000030 R	push offset copystr50
 000003CA  E8 00000000 E	call soutl

 000003CF  FF 35 00000034 R	push dlina50
 000003D5  E8 00000000 E	call noutl

 000003DA  FF 35 00000038 R	push strchislo50
 000003E0  E8 00000000 E	call noutl
 000003E5  FF 35 00000133 R		push short37
 000003EB  58				pop eax
 000003EC  3D 00007FFF			cmp eax, 32767
 000003F1  7F 63			jg overflow
 000003F3  3D FFFF8000			cmp eax, -32768
 000003F8  7C 5C			jl overflow
 000003FA  A3 0000003C R		mov i50, eax
 000003FF			cycle1:
 000003FF  A1 0000003C R		mov eax, i50
 00000404  3B 05 00000137 R		cmp eax, short38
 0000040A  7D 32			jge cycleEnd1

 0000040C  FF 35 0000003C R	push i50
 00000412  E8 00000000 E	call noutl
 00000417  FF 35 0000003C R		push i50
 0000041D  FF 35 0000013B R		push short39
 00000423  58				pop eax
 00000424  5B				pop ebx
 00000425  03 C3			add eax, ebx
 00000427  50				push eax
 00000428  58				pop eax
 00000429  3D 00007FFF			cmp eax, 32767
 0000042E  7F 26			jg overflow
 00000430  3D FFFF8000			cmp eax, -32768
 00000435  7C 1F			jl overflow
 00000437  A3 0000003C R		mov i50, eax
 0000043C  EB C1			jmp cycle1
 0000043E			cycleEnd1:
 0000043E  E8 00000000 E		call SYSPAUSE
 00000443  6A 00			push 0
 00000445  E8 00000000 E		call ExitProcess
 0000044A			SOMETHINGWRONG::
 0000044A  68 00000000 R		push offset null_division
 0000044F  E8 00000000 E		call soutl
 00000454  EB 0A		jmp THEEND
 00000456			overflow::
 00000456  68 00000018 R		push offset OVER_FLOW
 0000045B  E8 00000000 E		call soutl
 00000460			THEEND:
 00000460  E8 00000000 E		call SYSPAUSE
 00000465  6A FF			push -1
 00000467  E8 00000000 E		call ExitProcess
 0000046C			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.41.34120.0	    12/18/24 14:24:21
LPA-2024_ASM.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 0000013F Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000040 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000046C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SYSPAUSE . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strduplicate  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strlength . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strtransint . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 0000006B _TEXT	Length= 00000401 Public STDCALL
  pravda500T . . . . . . . . . .	L Near	 00000349 _TEXT	
  pravda500F . . . . . . . . . .	L Near	 00000355 _TEXT	
  pravda500  . . . . . . . . . .	L Near	 0000035F _TEXT	
  cycle1 . . . . . . . . . . . .	L Near	 000003FF _TEXT	
  cycleEnd1  . . . . . . . . . .	L Near	 0000043E _TEXT	
  THEEND . . . . . . . . . . . .	L Near	 00000460 _TEXT	
noutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
soutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
testfunc11 . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000037 Public STDCALL
  a1 . . . . . . . . . . . . . .	DWord	 bp + 00000008
  b1 . . . . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 00000032 _TEXT	
testfunc22 . . . . . . . . . . .	P Near	 00000037 _TEXT	Length= 00000034 Public STDCALL
  chetnoe2 . . . . . . . . . . .	DWord	 bp + 00000008
  local1 . . . . . . . . . . . .	L Near	 00000066 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
OVER_FLOW  . . . . . . . . . . .	Byte	 00000018 CONST	
SOMETHINGWRONG . . . . . . . . .	L Near	 0000044A _TEXT	
a50  . . . . . . . . . . . . . .	DWord	 00000014 _DATA	
b50  . . . . . . . . . . . . . .	DWord	 00000018 _DATA	
bool4  . . . . . . . . . . . . .	DWord	 0000004A CONST	
bt50 . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
copystr50  . . . . . . . . . . .	DWord	 00000030 _DATA	
dlina50  . . . . . . . . . . . .	DWord	 00000034 _DATA	
false  . . . . . . . . . . . . .	Byte	 0000002D CONST	
i50  . . . . . . . . . . . . . .	DWord	 0000003C _DATA	
it50 . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
null_division  . . . . . . . . .	Byte	 00000000 CONST	
number50 . . . . . . . . . . . .	DWord	 00000020 _DATA	
overflow . . . . . . . . . . . .	L Near	 00000456 _TEXT	
parm150  . . . . . . . . . . . .	DWord	 0000001C _DATA	
phah31 . . . . . . . . . . . . .	DWord	 00000004 _DATA	
pravda50 . . . . . . . . . . . .	DWord	 00000024 _DATA	
res10  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
short0 . . . . . . . . . . . . .	DWord	 00000033 CONST	
short10  . . . . . . . . . . . .	DWord	 0000007E CONST	
short11  . . . . . . . . . . . .	DWord	 00000082 CONST	
short13  . . . . . . . . . . . .	DWord	 0000008F CONST	
short14  . . . . . . . . . . . .	DWord	 00000093 CONST	
short16  . . . . . . . . . . . .	DWord	 000000AB CONST	
short17  . . . . . . . . . . . .	DWord	 000000AF CONST	
short19  . . . . . . . . . . . .	DWord	 000000BA CONST	
short1 . . . . . . . . . . . . .	DWord	 00000037 CONST	
short20  . . . . . . . . . . . .	DWord	 000000BE CONST	
short22  . . . . . . . . . . . .	DWord	 000000CB CONST	
short23  . . . . . . . . . . . .	DWord	 000000CF CONST	
short24  . . . . . . . . . . . .	DWord	 000000D3 CONST	
short26  . . . . . . . . . . . .	DWord	 000000E8 CONST	
short27  . . . . . . . . . . . .	DWord	 000000EC CONST	
short28  . . . . . . . . . . . .	DWord	 000000F0 CONST	
short2 . . . . . . . . . . . . .	DWord	 0000003B CONST	
short31  . . . . . . . . . . . .	DWord	 0000010E CONST	
short32  . . . . . . . . . . . .	DWord	 00000112 CONST	
short33  . . . . . . . . . . . .	DWord	 00000116 CONST	
short34  . . . . . . . . . . . .	DWord	 0000011A CONST	
short37  . . . . . . . . . . . .	DWord	 00000133 CONST	
short38  . . . . . . . . . . . .	DWord	 00000137 CONST	
short39  . . . . . . . . . . . .	DWord	 0000013B CONST	
short6 . . . . . . . . . . . . .	DWord	 00000067 CONST	
short7 . . . . . . . . . . . . .	DWord	 0000006B CONST	
short8 . . . . . . . . . . . . .	DWord	 0000006F CONST	
st50 . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
str12  . . . . . . . . . . . . .	Byte	 00000086 CONST	
str15  . . . . . . . . . . . . .	Byte	 00000097 CONST	
str18  . . . . . . . . . . . . .	Byte	 000000B3 CONST	
str21  . . . . . . . . . . . . .	Byte	 000000C2 CONST	
str25  . . . . . . . . . . . . .	Byte	 000000D7 CONST	
str29  . . . . . . . . . . . . .	Byte	 000000F4 CONST	
str30  . . . . . . . . . . . . .	Byte	 00000104 CONST	
str35  . . . . . . . . . . . . .	Byte	 0000011E CONST	
str36  . . . . . . . . . . . . .	Byte	 0000012F CONST	
str3 . . . . . . . . . . . . . .	Byte	 0000003F CONST	
str5 . . . . . . . . . . . . . .	Byte	 0000004E CONST	
str9 . . . . . . . . . . . . . .	Byte	 00000073 CONST	
strchislo50  . . . . . . . . . .	DWord	 00000038 _DATA	
stroka50 . . . . . . . . . . . .	DWord	 00000028 _DATA	
strokachislo50 . . . . . . . . .	DWord	 0000002C _DATA	
true . . . . . . . . . . . . . .	Byte	 00000028 CONST	

	   0 Warnings
	   0 Errors
