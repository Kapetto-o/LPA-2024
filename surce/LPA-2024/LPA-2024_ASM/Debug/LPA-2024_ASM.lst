Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/17/24 08:28:24
LPA-2024_ASM.asm					     Page 1 - 1


				.586
				.model flat, stdcall
				includelib libucrt.lib
				includelib kernel32.lib

				ExitProcess PROTO:DWORD 
				SYSPAUSE PROTO 
				soutl PROTO : BYTE 
				noutl PROTO : SDWORD 
				_strduplicate PROTO  : BYTE, : BYTE 
				_strlength PROTO  : BYTE 
				_strtransint PROTO  : BYTE 

				.STACK 4096

 00000000			.CONST
 00000000 45 52 52 4F 52		null_division BYTE 'ERROR: DIVISION BY ZERO', 0
	   3A 20 44 49 56
	   49 53 49 4F 4E
	   20 42 59 20 5A
	   45 52 4F 00
 00000018 45 52 52 4F 52		OVER_FLOW BYTE 'ERROR: OVERFLOW', 0
	   3A 20 4F 56 45
	   52 46 4C 4F 57
	   00
 00000028 74 72 75 65 00		true BYTE 'true', 0
 0000002D 66 61 6C 73 65		false BYTE 'false', 0
	   00
 00000033 54 65 73 74 54		str0 BYTE "TestText20", 0
	   65 78 74 32 30
	   00
 0000003E CC 00				char1 BYTE 'М', 0
 00000040 00000000			short2 SDWORD 0
 00000044 0000000A			short3 SDWORD 10
 00000048 00000001			short4 SDWORD 1
 0000004C 00000002			short5 SDWORD 2
 00000050 00000000			short6 SDWORD 0
 00000054 00000001			short7 SDWORD 1
 00000058 CC 00				char8 BYTE 'М', 0
 0000005A 74 65 73 74 73		str9 BYTE "teststring", 0
	   74 72 69 6E 67
	   00
 00000065 00000001			bool10 DWORD 1
 00000069 C0 F0 E8 F4 EC		str11 BYTE "Арифметические операции:", 0
	   E5 F2 E8 F7 E5
	   F1 EA E8 E5 20
	   EE EF E5 F0 E0
	   F6 E8 E8 3A 00
 00000082 0000000F			short12 SDWORD 15
 00000086 0000000A			short13 SDWORD 10
 0000008A 00000005			short14 SDWORD 5
 0000008E D3 EC ED EE E6		str15 BYTE "Умножение:", 0
	   E5 ED E8 E5 3A
	   00
 00000099 0000000A			short16 SDWORD 10
 0000009D 00000005			short17 SDWORD 5
 000000A1 C4 E5 EB E5 ED		str18 BYTE "Деление:", 0
	   E8 E5 3A 00
 000000AA 0000000F			short19 SDWORD 15
 000000AE 0000000A			short20 SDWORD 10
 000000B2 C4 E5 EB E5 ED		str21 BYTE "Деление с остатком:", 0
	   E8 E5 20 F1 20
	   EE F1 F2 E0 F2
	   EA EE EC 3A 00
 000000C6 0000000A			short22 SDWORD 10
 000000CA 00000005			short23 SDWORD 5
 000000CE D1 F3 EC EC E0		str24 BYTE "Сумма:", 0
	   3A 00
 000000D5 0000000A			short25 SDWORD 10
 000000D9 00000005			short26 SDWORD 5
 000000DD D0 E0 E7 ED E8		str27 BYTE "Разница:", 0
	   F6 E0 3A 00
 000000E6 00000005			short28 SDWORD 5
 000000EA 00000005			short29 SDWORD 5
 000000EE 00000005			short30 SDWORD 5
 000000F2 CF F0 E8 EE F0		str31 BYTE "Приоритет (=30):", 0
	   E8 F2 E5 F2 20
	   28 3D 33 30 29
	   3A 00
 00000103 00000005			short32 SDWORD 5
 00000107 00000005			short33 SDWORD 5
 0000010B 00000005			short34 SDWORD 5
 0000010F CF F0 E8 EE F0		str35 BYTE "Приоритет (=2):", 0
	   E8 F2 E5 F2 20
	   28 3D 32 29 3A
	   00
 0000011F 54 65 73 74 54		str36 BYTE "TestText1", 0
	   65 78 74 31 00
 00000129 CC 00				char37 BYTE 'М', 0
 0000012B 00000000			short38 SDWORD 0
 0000012F 00000005			short39 SDWORD 5
 00000133 0000000A			short40 SDWORD 10
 00000137 D2 E5 F1 F2 EE		str41 BYTE "Тестовая строчка", 0
	   E2 E0 FF 20 F1
	   F2 F0 EE F7 EA
	   E0 00
 00000148 31 32 35 00			str42 BYTE "125", 0
 0000014C 00000000			short43 SDWORD 0
 00000150 0000000A			short44 SDWORD 10
 00000154 00000001			short45 SDWORD 1
 00000000			.DATA
 00000000 00000000			res10 SDWORD 0
 00000004 00000000			parm231 DWORD ?
 00000008 00000000			i57 SDWORD 0
 0000000C 00000000			phah97 DWORD 0
 00000010 00000000			it116 SDWORD 0
 00000014 00				ct116 BYTE 0
 00000015 00000000			st116 DWORD ?
 00000019 00000000			bt116 DWORD 0
 0000001D 00000000			a116 SDWORD 0
 00000021 00000000			b116 SDWORD 0
 00000025 00000000			parm1116 DWORD ?
 00000029 00				alpha116 BYTE 0
 0000002A 00000000			number116 SDWORD 0
 0000002E 00000000			pravda116 DWORD 0
 00000032 00000000			stroka116 DWORD ?
 00000036 00000000			strokachislo116 DWORD ?
 0000003A 00000000			copystr116 DWORD ?
 0000003E 00000000			dlina116 SDWORD 0
 00000042 00000000			strchislo116 SDWORD 0
 00000046 00000000			i116 SDWORD 0

 00000000			.CODE

 00000000			testfunc11 PROC b1 : SDWORD, a1 : SDWORD
 00000003  FF 75 0C			push a1
 00000006  FF 75 08			push b1
 00000009  58				pop eax
 0000000A  5B				pop ebx
 0000000B  03 C3			add eax, ebx
 0000000D  50				push eax
 0000000E  58				pop eax
 0000000F  3D 00007FFF			cmp eax, 32767
 00000014  0F 8F 000004CC		jg overflow
 0000001A  3D FFFF8000			cmp eax, -32768
 0000001F  0F 8C 000004C1		jl overflow
 00000025  A3 00000000 R		mov res10, eax
 0000002A  FF 35 00000000 R		push res10
 00000030  EB 00			jmp local0
 00000032			local0:
 00000032  58				pop eax
					ret
 00000037			testfunc11 ENDP

 00000037			testfunc22 PROC parm12 : DWORD
 0000003A  68 00000033 R		push offset str0
 0000003F  8F 05 00000004 R		pop parm231

 00000045  FF 75 08			push parm12
 00000048  EB 00			jmp local1
 0000004A			local1:
 0000004A  58				pop eax
					ret
 0000004F			testfunc22 ENDP

 0000004F			testfunc33 PROC simbol3 : BYTE
 00000052  68 CCCCCCCC			push -858993460
					pop simbol3
LPA-2024_ASM.asm(124) : error A2070:invalid instruction operands

 00000057  FF 35 00000040 R		push short2
 0000005D  58				pop eax
 0000005E  3D 00007FFF			cmp eax, 32767
 00000063  0F 8F 0000047D		jg overflow
 00000069  3D FFFF8000			cmp eax, -32768
 0000006E  0F 8C 00000472		jl overflow
 00000074  A3 00000008 R		mov i57, eax
 00000079			startCycle1:
 00000079  A1 00000008 R		mov eax, i57
 0000007E  83 F8 0A			cmp eax, 10
					jge endCycle1
LPA-2024_ASM.asm(136) : error A2006:undefined symbol : endCycle1
 0000008A			cycleBody1:

 0000008A  8A 45 08			mov al, simbol3
 0000008D  50				push eax
 0000008E  E8 00000000 E		call soutl
 00000093  FF 35 00000008 R		push i57
 00000099  FF 35 00000048 R		push short4
 0000009F  58				pop eax
 000000A0  5B				pop ebx
 000000A1  03 C3			add eax, ebx
 000000A3  50				push eax
 000000A4  58				pop eax
 000000A5  3D 00007FFF			cmp eax, 32767
 000000AA  0F 8F 00000436		jg overflow
 000000B0  3D FFFF8000			cmp eax, -32768
 000000B5  0F 8C 0000042B		jl overflow
 000000BB  A3 00000008 R		mov i57, eax
					push simbol3
LPA-2024_ASM.asm(154) : error A2070:invalid instruction operands
 000000C0  EB 00			jmp local2
 000000C2			local2:
 000000C2  58				pop eax
					ret
 000000C7			testfunc33 ENDP

 000000C7			testfunc44 PROC chetnoe4 : SDWORD
 000000CA  FF 75 08			push chetnoe4
 000000CD  5B				pop ebx
 000000CE  58				pop eax
 000000CF  83 FB 00			cmp ebx,0
 000000D2  0F 84 00000407		je SOMETHINGWRONG
 000000D8  99				cdq
 000000D9  F7 FB			idiv ebx
 000000DB  52				push edx
 000000DC  FF 35 0000004C R		push short5
 000000E2  FF 35 00000050 R		push short6
 000000E8  8F 05 0000000C R		pop phah97

 000000EE  FF 35 0000000C R		push phah97
 000000F4  EB 00			jmp local3
 000000F6			local3:
 000000F6  58				pop eax
					ret
 000000FB			testfunc44 ENDP

 000000FB			main PROC
 000000FB  FF 35 00000054 R		push short7
 00000101  58				pop eax
 00000102  3D 00007FFF			cmp eax, 32767
 00000107  0F 8F 000003D9		jg overflow
 0000010D  3D FFFF8000			cmp eax, -32768
 00000112  0F 8C 000003CE		jl overflow
 00000118  A3 00000010 R		mov it116, eax
 0000011D  68 CCCCCCCC			push -858993460
					pop ct116
LPA-2024_ASM.asm(190) : error A2070:invalid instruction operands

 00000122  68 0000005A R		push offset str9
 00000127  8F 05 00000015 R		pop st116

 0000012D  FF 35 00000065 R		push bool10
 00000133  8F 05 00000019 R		pop bt116


 00000139  68 00000069 R	push offset str11
 0000013E  E8 00000000 E	call soutl
 00000143  FF 35 00000082 R		push short12
 00000149  58				pop eax
 0000014A  3D 00007FFF			cmp eax, 32767
 0000014F  0F 8F 00000391		jg overflow
 00000155  3D FFFF8000			cmp eax, -32768
 0000015A  0F 8C 00000386		jl overflow
 00000160  A3 00000021 R		mov b116, eax
 00000165  FF 35 00000086 R		push short13
 0000016B  FF 35 0000008A R		push short14
 00000171  58				pop eax
 00000172  5B				pop ebx
 00000173  F7 E3			mul ebx
 00000175  50				push eax
 00000176  58				pop eax
 00000177  3D 00007FFF			cmp eax, 32767
 0000017C  0F 8F 00000364		jg overflow
 00000182  3D FFFF8000			cmp eax, -32768
 00000187  0F 8C 00000359		jl overflow
 0000018D  A3 0000001D R		mov a116, eax

 00000192  68 0000008E R	push offset str15
 00000197  E8 00000000 E	call soutl

 0000019C  FF 35 0000001D R	push a116
 000001A2  E8 00000000 E	call noutl
 000001A7  FF 35 00000099 R		push short16
 000001AD  FF 35 0000009D R		push short17
 000001B3  5B				pop ebx
 000001B4  58				pop eax
 000001B5  83 FB 00			cmp ebx,0
 000001B8  0F 84 00000321		je SOMETHINGWRONG
 000001BE  99				cdq
 000001BF  F7 FB			idiv ebx
 000001C1  50				push eax
 000001C2  58				pop eax
 000001C3  3D 00007FFF			cmp eax, 32767
 000001C8  0F 8F 00000318		jg overflow
 000001CE  3D FFFF8000			cmp eax, -32768
 000001D3  0F 8C 0000030D		jl overflow
 000001D9  A3 0000001D R		mov a116, eax

 000001DE  68 000000A1 R	push offset str18
 000001E3  E8 00000000 E	call soutl

 000001E8  FF 35 0000001D R	push a116
 000001EE  E8 00000000 E	call noutl
 000001F3  FF 35 000000AA R		push short19
 000001F9  FF 35 000000AE R		push short20
 000001FF  5B				pop ebx
 00000200  58				pop eax
 00000201  83 FB 00			cmp ebx,0
 00000204  0F 84 000002D5		je SOMETHINGWRONG
 0000020A  99				cdq
 0000020B  F7 FB			idiv ebx
 0000020D  52				push edx
 0000020E  58				pop eax
 0000020F  3D 00007FFF			cmp eax, 32767
 00000214  0F 8F 000002CC		jg overflow
 0000021A  3D FFFF8000			cmp eax, -32768
 0000021F  0F 8C 000002C1		jl overflow
 00000225  A3 0000001D R		mov a116, eax

 0000022A  68 000000B2 R	push offset str21
 0000022F  E8 00000000 E	call soutl

 00000234  FF 35 0000001D R	push a116
 0000023A  E8 00000000 E	call noutl
 0000023F  FF 35 000000C6 R		push short22
 00000245  FF 35 000000CA R	push short23
 0000024B  58				pop eax
 0000024C  5B				pop ebx
 0000024D  03 C3			add eax, ebx
 0000024F  50				push eax
 00000250  58				pop eax
 00000251  3D 00007FFF			cmp eax, 32767
 00000256  0F 8F 0000028A		jg overflow
 0000025C  3D FFFF8000			cmp eax, -32768
 00000261  0F 8C 0000027F		jl overflow
 00000267  A3 0000001D R		mov a116, eax

 0000026C  68 000000CE R	push offset str24
 00000271  E8 00000000 E	call soutl

 00000276  FF 35 0000001D R	push a116
 0000027C  E8 00000000 E	call noutl
 00000281  FF 35 000000D5 R		push short25
 00000287  FF 35 000000D9 R		push short26
 0000028D  5B				pop ebx
 0000028E  58				pop eax
 0000028F  2B C3			sub eax, ebx
 00000291  50				push eax
 00000292  58				pop eax
 00000293  3D 00007FFF			cmp eax, 32767
 00000298  0F 8F 00000248		jg overflow
 0000029E  3D FFFF8000			cmp eax, -32768
 000002A3  0F 8C 0000023D		jl overflow
 000002A9  A3 0000001D R		mov a116, eax

 000002AE  68 000000DD R	push offset str27
 000002B3  E8 00000000 E	call soutl

 000002B8  FF 35 0000001D R	push a116
 000002BE  E8 00000000 E	call noutl
 000002C3  FF 35 000000E6 R		push short28
 000002C9  FF 35 000000EA R		push short29
 000002CF  FF 35 000000EE R		push short30
 000002D5  58				pop eax
 000002D6  5B				pop ebx
 000002D7  F7 E3			mul ebx
 000002D9  50				push eax
 000002DA  58				pop eax
 000002DB  5B				pop ebx
 000002DC  03 C3			add eax, ebx
 000002DE  50				push eax
 000002DF  58				pop eax
 000002E0  3D 00007FFF			cmp eax, 32767
 000002E5  0F 8F 000001FB		jg overflow
 000002EB  3D FFFF8000			cmp eax, -32768
 000002F0  0F 8C 000001F0		jl overflow
 000002F6  A3 0000001D R		mov a116, eax

 000002FB  68 000000F2 R	push offset str31
 00000300  E8 00000000 E	call soutl

 00000305  FF 35 0000001D R	push a116
 0000030B  E8 00000000 E	call noutl
 00000310  FF 35 00000103 R		push short32
 00000316  FF 35 00000107 R		push short33
 0000031C  58				pop eax
 0000031D  5B				pop ebx
 0000031E  03 C3			add eax, ebx
 00000320  50				push eax
 00000321  FF 35 0000010B R		push short34
 00000327  5B				pop ebx
 00000328  58				pop eax
 00000329  83 FB 00			cmp ebx,0
 0000032C  0F 84 000001AD		je SOMETHINGWRONG
 00000332  99				cdq
 00000333  F7 FB			idiv ebx
 00000335  50				push eax
 00000336  58				pop eax
 00000337  3D 00007FFF			cmp eax, 32767
 0000033C  0F 8F 000001A4		jg overflow
 00000342  3D FFFF8000			cmp eax, -32768
 00000347  0F 8C 00000199		jl overflow
 0000034D  A3 0000001D R		mov a116, eax

 00000352  68 0000010F R	push offset str35
 00000357  E8 00000000 E	call soutl

 0000035C  FF 35 0000001D R	push a116
 00000362  E8 00000000 E	call noutl
 00000367  68 0000011F R		push offset str36
 0000036C  8F 05 00000025 R		pop parm1116

 00000372  68 CCCCCCCC			push -858993460
					pop alpha116
LPA-2024_ASM.asm(357) : error A2070:invalid instruction operands

 00000377  FF 35 0000012B R		push short38
 0000037D  FF 35 0000012F R		push short39
 00000383  E8 FFFFFC78			call testfunc11
 00000388  50				push eax
 00000389  58				pop eax
 0000038A  3D 00007FFF			cmp eax, 32767
 0000038F  0F 8F 00000151		jg overflow
 00000395  3D FFFF8000			cmp eax, -32768
 0000039A  0F 8C 00000146		jl overflow
 000003A0  A3 0000002A R		mov number116, eax
 000003A5  FF 35 00000133 R		push short40
 000003AB  E8 FFFFFD17			call testfunc44
 000003B0  50				push eax
 000003B1  8F 05 0000002E R		pop pravda116


 000003B7  FF 35 0000002A R	push number116
 000003BD  E8 00000000 E	call noutl

 000003C2  FF 35 00000025 R	push parm1116
 000003C8  E8 00000000 E	call soutl

 000003CD  A0 00000029 R		mov al, alpha116
 000003D2  50				push eax
 000003D3  E8 00000000 E		call soutl
 000003D8  A1 0000002E R		mov eax, pravda116
 000003DD  83 F8 00			cmp eax, 0
 000003E0  74 0C			jz boolFalse0

 000003E2  68 00000028 R	push offset true
 000003E7  E8 00000000 E	call soutl
 000003EC  EB 0A			jmp boolEnd0
 000003EE			boolFalse0:

 000003EE  68 0000002D R	push offset false
 000003F3  E8 00000000 E	call soutl
 000003F8			boolEnd0:
 000003F8  68 00000137 R		push offset str41
 000003FD  8F 05 00000032 R		pop stroka116

 00000403  68 00000148 R		push offset str42
 00000408  8F 05 00000036 R		pop strokachislo116

 0000040E  FF 35 00000032 R		push stroka116
 00000414  E8 00000000 E		call _strlength
 00000419  50				push eax
 0000041A  58				pop eax
 0000041B  3D 00007FFF			cmp eax, 32767
 00000420  0F 8F 000000C0		jg overflow
 00000426  3D FFFF8000			cmp eax, -32768
 0000042B  0F 8C 000000B5		jl overflow
 00000431  A3 0000003E R		mov dlina116, eax
 00000436  FF 35 00000036 R		push strokachislo116
 0000043C  E8 00000000 E		call _strtransint
 00000441  50				push eax
 00000442  58				pop eax
 00000443  3D 00007FFF			cmp eax, 32767
 00000448  0F 8F 00000098		jg overflow
 0000044E  3D FFFF8000			cmp eax, -32768
 00000453  0F 8C 0000008D		jl overflow
 00000459  A3 00000042 R		mov strchislo116, eax

 0000045E  FF 35 0000003A R	push copystr116
 00000464  E8 00000000 E	call soutl

 00000469  FF 35 0000003E R	push dlina116
 0000046F  E8 00000000 E	call noutl

 00000474  FF 35 00000042 R	push strchislo116
 0000047A  E8 00000000 E	call noutl
 0000047F  FF 35 0000014C R		push short43
 00000485  58				pop eax
 00000486  3D 00007FFF			cmp eax, 32767
 0000048B  7F 59			jg overflow
 0000048D  3D FFFF8000			cmp eax, -32768
 00000492  7C 52			jl overflow
 00000494  A3 00000046 R		mov i116, eax
 00000499			startCycle2:
 00000499  A1 00000046 R		mov eax, i116
 0000049E  83 F8 0A			cmp eax, 10
 000004A1  7D 54			jge endCycle2
 000004A3			cycleBody2:

 000004A3  FF 35 00000046 R	push i116
 000004A9  E8 00000000 E	call noutl
 000004AE  FF 35 00000046 R		push i116
 000004B4  FF 35 00000154 R		push short45
 000004BA  58				pop eax
 000004BB  5B				pop ebx
 000004BC  03 C3			add eax, ebx
 000004BE  50				push eax
 000004BF  58				pop eax
 000004C0  3D 00007FFF			cmp eax, 32767
 000004C5  7F 1F			jg overflow
 000004C7  3D FFFF8000			cmp eax, -32768
 000004CC  7C 18			jl overflow
 000004CE  A3 00000046 R		mov i116, eax
 000004D3  E8 00000000 E		call SYSPAUSE
 000004D8  6A 00			push 0
 000004DA  E8 00000000 E		call ExitProcess
 000004DF			SOMETHINGWRONG::
 000004DF  68 00000000 R		push offset null_division
 000004E4  EB 05		jmp THEEND
 000004E6			overflow::
 000004E6  68 00000018 R		push offset OVER_FLOW
 000004EB			THEEND:
 000004EB  E8 00000000 E		call SYSPAUSE
 000004F0  6A FF			push -1
 000004F2  E8 00000000 E		call ExitProcess
 000004F7			main ENDP
				end main	jmp startCycle2
LPA-2024_ASM.asm(469) : error A2008:syntax error : jmp
 000004F7			endCycle2:
LPA-2024_ASM.asm(470) : error A2088:END directive required at end of file
Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/17/24 08:28:24
LPA-2024_ASM.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000158 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000004A Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000004F7 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SYSPAUSE . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strduplicate  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strlength . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strtransint . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 000000FB _TEXT	Length= 000003FC Public STDCALL
  boolFalse0 . . . . . . . . . .	L Near	 000003EE _TEXT	
  boolEnd0 . . . . . . . . . . .	L Near	 000003F8 _TEXT	
  startCycle2  . . . . . . . . .	L Near	 00000499 _TEXT	
  cycleBody2 . . . . . . . . . .	L Near	 000004A3 _TEXT	
  THEEND . . . . . . . . . . . .	L Near	 000004EB _TEXT	
noutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
soutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
testfunc11 . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000037 Public STDCALL
  b1 . . . . . . . . . . . . . .	DWord	 bp + 00000008
  a1 . . . . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 00000032 _TEXT	
testfunc22 . . . . . . . . . . .	P Near	 00000037 _TEXT	Length= 00000018 Public STDCALL
  parm12 . . . . . . . . . . . .	DWord	 bp + 00000008
  local1 . . . . . . . . . . . .	L Near	 0000004A _TEXT	
testfunc33 . . . . . . . . . . .	P Near	 0000004F _TEXT	Length= 00000078 Public STDCALL
  simbol3  . . . . . . . . . . .	Byte	 bp + 00000008
  startCycle1  . . . . . . . . .	L Near	 00000079 _TEXT	
  cycleBody1 . . . . . . . . . .	L Near	 0000008A _TEXT	
  local2 . . . . . . . . . . . .	L Near	 000000C2 _TEXT	
testfunc44 . . . . . . . . . . .	P Near	 000000C7 _TEXT	Length= 00000034 Public STDCALL
  chetnoe4 . . . . . . . . . . .	DWord	 bp + 00000008
  local3 . . . . . . . . . . . .	L Near	 000000F6 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
OVER_FLOW  . . . . . . . . . . .	Byte	 00000018 CONST	
SOMETHINGWRONG . . . . . . . . .	L Near	 000004DF _TEXT	
a116 . . . . . . . . . . . . . .	DWord	 0000001D _DATA	
alpha116 . . . . . . . . . . . .	Byte	 00000029 _DATA	
b116 . . . . . . . . . . . . . .	DWord	 00000021 _DATA	
bool10 . . . . . . . . . . . . .	DWord	 00000065 CONST	
bt116  . . . . . . . . . . . . .	DWord	 00000019 _DATA	
char1  . . . . . . . . . . . . .	Byte	 0000003E CONST	
char37 . . . . . . . . . . . . .	Byte	 00000129 CONST	
char8  . . . . . . . . . . . . .	Byte	 00000058 CONST	
copystr116 . . . . . . . . . . .	DWord	 0000003A _DATA	
ct116  . . . . . . . . . . . . .	Byte	 00000014 _DATA	
dlina116 . . . . . . . . . . . .	DWord	 0000003E _DATA	
endCycle2  . . . . . . . . . . .	L Near	 000004F7 _TEXT	
false  . . . . . . . . . . . . .	Byte	 0000002D CONST	
i116 . . . . . . . . . . . . . .	DWord	 00000046 _DATA	
i57  . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
it116  . . . . . . . . . . . . .	DWord	 00000010 _DATA	
null_division  . . . . . . . . .	Byte	 00000000 CONST	
number116  . . . . . . . . . . .	DWord	 0000002A _DATA	
overflow . . . . . . . . . . . .	L Near	 000004E6 _TEXT	
parm1116 . . . . . . . . . . . .	DWord	 00000025 _DATA	
parm231  . . . . . . . . . . . .	DWord	 00000004 _DATA	
phah97 . . . . . . . . . . . . .	DWord	 0000000C _DATA	
pravda116  . . . . . . . . . . .	DWord	 0000002E _DATA	
res10  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
short12  . . . . . . . . . . . .	DWord	 00000082 CONST	
short13  . . . . . . . . . . . .	DWord	 00000086 CONST	
short14  . . . . . . . . . . . .	DWord	 0000008A CONST	
short16  . . . . . . . . . . . .	DWord	 00000099 CONST	
short17  . . . . . . . . . . . .	DWord	 0000009D CONST	
short19  . . . . . . . . . . . .	DWord	 000000AA CONST	
short20  . . . . . . . . . . . .	DWord	 000000AE CONST	
short22  . . . . . . . . . . . .	DWord	 000000C6 CONST	
short23  . . . . . . . . . . . .	DWord	 000000CA CONST	
short25  . . . . . . . . . . . .	DWord	 000000D5 CONST	
short26  . . . . . . . . . . . .	DWord	 000000D9 CONST	
short28  . . . . . . . . . . . .	DWord	 000000E6 CONST	
short29  . . . . . . . . . . . .	DWord	 000000EA CONST	
short2 . . . . . . . . . . . . .	DWord	 00000040 CONST	
short30  . . . . . . . . . . . .	DWord	 000000EE CONST	
short32  . . . . . . . . . . . .	DWord	 00000103 CONST	
short33  . . . . . . . . . . . .	DWord	 00000107 CONST	
short34  . . . . . . . . . . . .	DWord	 0000010B CONST	
short38  . . . . . . . . . . . .	DWord	 0000012B CONST	
short39  . . . . . . . . . . . .	DWord	 0000012F CONST	
short3 . . . . . . . . . . . . .	DWord	 00000044 CONST	
short40  . . . . . . . . . . . .	DWord	 00000133 CONST	
short43  . . . . . . . . . . . .	DWord	 0000014C CONST	
short44  . . . . . . . . . . . .	DWord	 00000150 CONST	
short45  . . . . . . . . . . . .	DWord	 00000154 CONST	
short4 . . . . . . . . . . . . .	DWord	 00000048 CONST	
short5 . . . . . . . . . . . . .	DWord	 0000004C CONST	
short6 . . . . . . . . . . . . .	DWord	 00000050 CONST	
short7 . . . . . . . . . . . . .	DWord	 00000054 CONST	
st116  . . . . . . . . . . . . .	DWord	 00000015 _DATA	
str0 . . . . . . . . . . . . . .	Byte	 00000033 CONST	
str11  . . . . . . . . . . . . .	Byte	 00000069 CONST	
str15  . . . . . . . . . . . . .	Byte	 0000008E CONST	
str18  . . . . . . . . . . . . .	Byte	 000000A1 CONST	
str21  . . . . . . . . . . . . .	Byte	 000000B2 CONST	
str24  . . . . . . . . . . . . .	Byte	 000000CE CONST	
str27  . . . . . . . . . . . . .	Byte	 000000DD CONST	
str31  . . . . . . . . . . . . .	Byte	 000000F2 CONST	
str35  . . . . . . . . . . . . .	Byte	 0000010F CONST	
str36  . . . . . . . . . . . . .	Byte	 0000011F CONST	
str41  . . . . . . . . . . . . .	Byte	 00000137 CONST	
str42  . . . . . . . . . . . . .	Byte	 00000148 CONST	
str9 . . . . . . . . . . . . . .	Byte	 0000005A CONST	
strchislo116 . . . . . . . . . .	DWord	 00000042 _DATA	
stroka116  . . . . . . . . . . .	DWord	 00000032 _DATA	
strokachislo116  . . . . . . . .	DWord	 00000036 _DATA	
true . . . . . . . . . . . . . .	Byte	 00000028 CONST	

	   0 Warnings
	   7 Errors
