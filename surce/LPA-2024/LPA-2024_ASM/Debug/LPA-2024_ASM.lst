Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/17/24 13:20:53
LPA-2024_ASM.asm					     Page 1 - 1


				.586
				.model flat, stdcall
				includelib libucrt.lib
				includelib kernel32.lib

				ExitProcess PROTO:DWORD 
				SYSPAUSE PROTO 
				soutl PROTO : BYTE 
				noutl PROTO : SDWORD 
				_strduplicate PROTO  : BYTE, : BYTE 
				_strlength PROTO  : BYTE 
				_strtransint PROTO  : BYTE 

				.STACK 4096

 00000000			.CONST
 00000000 45 52 52 4F 52		null_division BYTE 'ERROR: DIVISION BY ZERO', 0
	   3A 20 44 49 56
	   49 53 49 4F 4E
	   20 42 59 20 5A
	   45 52 4F 00
 00000018 45 52 52 4F 52		OVER_FLOW BYTE 'ERROR: OVERFLOW', 0
	   3A 20 4F 56 45
	   52 46 4C 4F 57
	   00
 00000028 74 72 75 65 00		true BYTE 'true', 0
 0000002D 66 61 6C 73 65		false BYTE 'false', 0
	   00
 00000033 54 65 73 74 54		str0 BYTE "TestText20", 0
	   65 78 74 32 30
	   00
 0000003E 00000002			short1 SDWORD 2
 00000042 00000000			short2 SDWORD 0
 00000046 00000001			short3 SDWORD 1
 0000004A 74 65 73 74 73		str4 BYTE "teststring", 0
	   74 72 69 6E 67
	   00
 00000055 00000001			bool5 DWORD 1
 00000059 C0 F0 E8 F4 EC		str6 BYTE "Арифметические операции:", 0
	   E5 F2 E8 F7 E5
	   F1 EA E8 E5 20
	   EE EF E5 F0 E0
	   F6 E8 E8 3A 00
 00000072 0000000F			short7 SDWORD 15
 00000076 0000000A			short8 SDWORD 10
 0000007A 00000005			short9 SDWORD 5
 0000007E D3 EC ED EE E6		str10 BYTE "Умножение:", 0
	   E5 ED E8 E5 3A
	   00
 00000089 0000000A			short11 SDWORD 10
 0000008D 00000005			short12 SDWORD 5
 00000091 C4 E5 EB E5 ED		str13 BYTE "Деление:", 0
	   E8 E5 3A 00
 0000009A 0000000F			short14 SDWORD 15
 0000009E 0000000A			short15 SDWORD 10
 000000A2 C4 E5 EB E5 ED		str16 BYTE "Деление с остатком:", 0
	   E8 E5 20 F1 20
	   EE F1 F2 E0 F2
	   EA EE EC 3A 00
 000000B6 0000000A			short17 SDWORD 10
 000000BA 00000005			short18 SDWORD 5
 000000BE D1 F3 EC EC E0		str19 BYTE "Сумма:", 0
	   3A 00
 000000C5 0000000A			short20 SDWORD 10
 000000C9 00000005			short21 SDWORD 5
 000000CD D0 E0 E7 ED E8		str22 BYTE "Разница:", 0
	   F6 E0 3A 00
 000000D6 00000005			short23 SDWORD 5
 000000DA 00000005			short24 SDWORD 5
 000000DE 00000005			short25 SDWORD 5
 000000E2 CF F0 E8 EE F0		str26 BYTE "Приоритет (=30):", 0
	   E8 F2 E5 F2 20
	   28 3D 33 30 29
	   3A 00
 000000F3 00000005			short27 SDWORD 5
 000000F7 00000005			short28 SDWORD 5
 000000FB 00000005			short29 SDWORD 5
 000000FF CF F0 E8 EE F0		str30 BYTE "Приоритет (=2):", 0
	   E8 F2 E5 F2 20
	   28 3D 32 29 3A
	   00
 0000010F 54 65 73 74 54		str31 BYTE "TestText1", 0
	   65 78 74 31 00
 00000119 00000000			short32 SDWORD 0
 0000011D 00000005			short33 SDWORD 5
 00000121 0000000A			short34 SDWORD 10
 00000125 D2 E5 F1 F2 EE		str35 BYTE "Тестовая строчка", 0
	   E2 E0 FF 20 F1
	   F2 F0 EE F7 EA
	   E0 00
 00000136 31 32 35 00			str36 BYTE "125", 0
 0000013A 00000000			short37 SDWORD 0
 0000013E 0000000A			short38 SDWORD 10
 00000142 00000001			short39 SDWORD 1
 00000000			.DATA
 00000000 00000000			res10 SDWORD 0
 00000004 00000000			parm231 DWORD ?
 00000008 00000000			phah57 DWORD 0
 0000000C 00000000			it76 SDWORD 0
 00000010 00000000			st76 DWORD ?
 00000014 00000000			bt76 DWORD 0
 00000018 00000000			a76 SDWORD 0
 0000001C 00000000			b76 SDWORD 0
 00000020 00000000			parm176 DWORD ?
 00000024 00000000			number76 SDWORD 0
 00000028 00000000			pravda76 DWORD 0
 0000002C 00000000			stroka76 DWORD ?
 00000030 00000000			strokachislo76 DWORD ?
 00000034 00000000			copystr76 DWORD ?
 00000038 00000000			dlina76 SDWORD 0
 0000003C 00000000			strchislo76 SDWORD 0
 00000040 00000000			i76 SDWORD 0

 00000000			.CODE

 00000000			testfunc11 PROC a1 : SDWORD, b1 : SDWORD
 00000003  FF 75 08			push a1
 00000006  FF 75 0C			push b1
 00000009  58				pop eax
 0000000A  5B				pop ebx
 0000000B  03 C3			add eax, ebx
 0000000D  50				push eax
 0000000E  58				pop eax
 0000000F  3D 00007FFF			cmp eax, 32767
 00000014  0F 8F 0000044B		jg overflow
 0000001A  3D FFFF8000			cmp eax, -32768
 0000001F  0F 8C 00000440		jl overflow
 00000025  A3 00000000 R		mov res10, eax
 0000002A  FF 35 00000000 R		push res10
 00000030  EB 00			jmp local0
 00000032			local0:
 00000032  58				pop eax
					ret
 00000037			testfunc11 ENDP

 00000037			testfunc22 PROC parm12 : DWORD
 0000003A  68 00000033 R		push offset str0
 0000003F  8F 05 00000004 R		pop parm231
 00000045  FF 75 08			push parm12
 00000048  EB 00			jmp local1
 0000004A			local1:
 0000004A  58				pop eax
					ret
 0000004F			testfunc22 ENDP

 0000004F			testfunc43 PROC chetnoe3 : SDWORD
 00000052  FF 75 08			push chetnoe3
 00000055  5B				pop ebx
 00000056  58				pop eax
 00000057  83 FB 00			cmp ebx,0
 0000005A  0F 84 000003F9		je SOMETHINGWRONG
 00000060  99				cdq
 00000061  F7 FB			idiv ebx
 00000063  52				push edx
 00000064  FF 35 0000003E R		push short1
 0000006A  FF 35 00000042 R		push short2
 00000070  8F 05 00000008 R		pop phah57
 00000076  FF 35 00000008 R		push phah57
 0000007C  EB 00			jmp local2
 0000007E			local2:
 0000007E  58				pop eax
					ret
 00000083			testfunc43 ENDP

 00000083			main PROC
 00000083  FF 35 00000046 R		push short3
 00000089  58				pop eax
 0000008A  3D 00007FFF			cmp eax, 32767
 0000008F  0F 8F 000003D0		jg overflow
 00000095  3D FFFF8000			cmp eax, -32768
 0000009A  0F 8C 000003C5		jl overflow
 000000A0  A3 0000000C R		mov it76, eax
 000000A5  68 0000004A R		push offset str4
 000000AA  8F 05 00000010 R		pop st76
 000000B0  FF 35 00000055 R		push bool5
 000000B6  8F 05 00000014 R		pop bt76

 000000BC  68 00000059 R	push offset str6
 000000C1  E8 00000000 E	call soutl
 000000C6  FF 35 00000072 R		push short7
 000000CC  58				pop eax
 000000CD  3D 00007FFF			cmp eax, 32767
 000000D2  0F 8F 0000038D		jg overflow
 000000D8  3D FFFF8000			cmp eax, -32768
 000000DD  0F 8C 00000382		jl overflow
 000000E3  A3 0000001C R		mov b76, eax
 000000E8  FF 35 00000076 R		push short8
 000000EE  FF 35 0000007A R		push short9
 000000F4  58				pop eax
 000000F5  5B				pop ebx
 000000F6  F7 E3			mul ebx
 000000F8  50				push eax
 000000F9  58				pop eax
 000000FA  3D 00007FFF			cmp eax, 32767
 000000FF  0F 8F 00000360		jg overflow
 00000105  3D FFFF8000			cmp eax, -32768
 0000010A  0F 8C 00000355		jl overflow
 00000110  A3 00000018 R		mov a76, eax

 00000115  68 0000007E R	push offset str10
 0000011A  E8 00000000 E	call soutl

 0000011F  FF 35 00000018 R	push a76
 00000125  E8 00000000 E	call noutl
 0000012A  FF 35 00000089 R		push short11
 00000130  FF 35 0000008D R		push short12
 00000136  5B				pop ebx
 00000137  58				pop eax
 00000138  83 FB 00			cmp ebx,0
 0000013B  0F 84 00000318		je SOMETHINGWRONG
 00000141  99				cdq
 00000142  F7 FB			idiv ebx
 00000144  50				push eax
 00000145  58				pop eax
 00000146  3D 00007FFF			cmp eax, 32767
 0000014B  0F 8F 00000314		jg overflow
 00000151  3D FFFF8000			cmp eax, -32768
 00000156  0F 8C 00000309		jl overflow
 0000015C  A3 00000018 R		mov a76, eax

 00000161  68 00000091 R	push offset str13
 00000166  E8 00000000 E	call soutl

 0000016B  FF 35 00000018 R	push a76
 00000171  E8 00000000 E	call noutl
 00000176  FF 35 0000009A R		push short14
 0000017C  FF 35 0000009E R		push short15
 00000182  5B				pop ebx
 00000183  58				pop eax
 00000184  83 FB 00			cmp ebx,0
 00000187  0F 84 000002CC		je SOMETHINGWRONG
 0000018D  99				cdq
 0000018E  F7 FB			idiv ebx
 00000190  52				push edx
 00000191  58				pop eax
 00000192  3D 00007FFF			cmp eax, 32767
 00000197  0F 8F 000002C8		jg overflow
 0000019D  3D FFFF8000			cmp eax, -32768
 000001A2  0F 8C 000002BD		jl overflow
 000001A8  A3 00000018 R		mov a76, eax

 000001AD  68 000000A2 R	push offset str16
 000001B2  E8 00000000 E	call soutl

 000001B7  FF 35 00000018 R	push a76
 000001BD  E8 00000000 E	call noutl
 000001C2  FF 35 000000B6 R		push short17
 000001C8  FF 35 000000BA R		push short18
 000001CE  58				pop eax
 000001CF  5B				pop ebx
 000001D0  03 C3			add eax, ebx
 000001D2  50				push eax
 000001D3  58				pop eax
 000001D4  3D 00007FFF			cmp eax, 32767
 000001D9  0F 8F 00000286		jg overflow
 000001DF  3D FFFF8000			cmp eax, -32768
 000001E4  0F 8C 0000027B		jl overflow
 000001EA  A3 00000018 R		mov a76, eax

 000001EF  68 000000BE R	push offset str19
 000001F4  E8 00000000 E	call soutl

 000001F9  FF 35 00000018 R	push a76
 000001FF  E8 00000000 E	call noutl
 00000204  FF 35 000000C5 R		push short20
 0000020A  FF 35 000000C9 R		push short21
 00000210  5B				pop ebx
 00000211  58				pop eax
 00000212  2B C3			sub eax, ebx
 00000214  50				push eax
 00000215  58				pop eax
 00000216  3D 00007FFF			cmp eax, 32767
 0000021B  0F 8F 00000244		jg overflow
 00000221  3D FFFF8000			cmp eax, -32768
 00000226  0F 8C 00000239		jl overflow
 0000022C  A3 00000018 R		mov a76, eax

 00000231  68 000000CD R	push offset str22
 00000236  E8 00000000 E	call soutl

 0000023B  FF 35 00000018 R	push a76
 00000241  E8 00000000 E	call noutl
 00000246  FF 35 000000D6 R		push short23
 0000024C  FF 35 000000DA R		push short24
 00000252  FF 35 000000DE R		push short25
 00000258  58				pop eax
 00000259  5B				pop ebx
 0000025A  F7 E3			mul ebx
 0000025C  50				push eax
 0000025D  58				pop eax
 0000025E  5B				pop ebx
 0000025F  03 C3			add eax, ebx
 00000261  50				push eax
 00000262  58				pop eax
 00000263  3D 00007FFF			cmp eax, 32767
 00000268  0F 8F 000001F7		jg overflow
 0000026E  3D FFFF8000			cmp eax, -32768
 00000273  0F 8C 000001EC		jl overflow
 00000279  A3 00000018 R		mov a76, eax

 0000027E  68 000000E2 R	push offset str26
 00000283  E8 00000000 E	call soutl

 00000288  FF 35 00000018 R	push a76
 0000028E  E8 00000000 E	call noutl
 00000293  FF 35 000000F3 R		push short27
 00000299  FF 35 000000F7 R		push short28
 0000029F  58				pop eax
 000002A0  5B				pop ebx
 000002A1  03 C3			add eax, ebx
 000002A3  50				push eax
 000002A4  FF 35 000000FB R		push short29
 000002AA  5B				pop ebx
 000002AB  58				pop eax
 000002AC  83 FB 00			cmp ebx,0
 000002AF  0F 84 000001A4		je SOMETHINGWRONG
 000002B5  99				cdq
 000002B6  F7 FB			idiv ebx
 000002B8  50				push eax
 000002B9  58				pop eax
 000002BA  3D 00007FFF			cmp eax, 32767
 000002BF  0F 8F 000001A0		jg overflow
 000002C5  3D FFFF8000			cmp eax, -32768
 000002CA  0F 8C 00000195		jl overflow
 000002D0  A3 00000018 R		mov a76, eax

 000002D5  68 000000FF R	push offset str30
 000002DA  E8 00000000 E	call soutl

 000002DF  FF 35 00000018 R	push a76
 000002E5  E8 00000000 E	call noutl
 000002EA  68 0000010F R		push offset str31
 000002EF  8F 05 00000020 R		pop parm176
 000002F5  FF 35 00000119 R		push short32
 000002FB  FF 35 0000011D R		push short33
 00000301  E8 FFFFFCFA			call testfunc11
 00000306  50				push eax
 00000307  58				pop eax
 00000308  3D 00007FFF			cmp eax, 32767
 0000030D  0F 8F 00000152		jg overflow
 00000313  3D FFFF8000			cmp eax, -32768
 00000318  0F 8C 00000147		jl overflow
 0000031E  A3 00000024 R		mov number76, eax
 00000323  FF 35 00000121 R		push short34
 00000329  E8 FFFFFD21			call testfunc43
 0000032E  50				push eax
 0000032F  8F 05 00000028 R		pop pravda76

 00000335  FF 35 00000024 R	push number76
 0000033B  E8 00000000 E	call noutl

 00000340  FF 35 00000020 R	push parm176
 00000346  E8 00000000 E	call soutl
 0000034B  A1 00000028 R		mov eax, pravda76
 00000350  83 F8 00			cmp eax, 0
 00000353  74 02			jz pravda760T
 00000355  75 0C			jnz pravda760F

 00000357			pravda760T:

 00000357  68 0000002D R	push offset false
 0000035C  E8 00000000 E	call soutl

 00000361  EB 0A		jmp pravda760

 00000363			pravda760F:

 00000363  68 00000028 R	push offset true
 00000368  E8 00000000 E	call soutl

 0000036D			pravda760:
 0000036D  68 00000125 R		push offset str35
 00000372  8F 05 0000002C R		pop stroka76
 00000378  68 00000136 R		push offset str36
 0000037D  8F 05 00000030 R		pop strokachislo76
 00000383  FF 35 0000002C R		push stroka76
 00000389  E8 00000000 E		call _strlength
 0000038E  50				push eax
 0000038F  58				pop eax
 00000390  3D 00007FFF			cmp eax, 32767
 00000395  0F 8F 000000CA		jg overflow
 0000039B  3D FFFF8000			cmp eax, -32768
 000003A0  0F 8C 000000BF		jl overflow
 000003A6  A3 00000038 R		mov dlina76, eax
 000003AB  FF 35 00000030 R		push strokachislo76
 000003B1  E8 00000000 E		call _strtransint
 000003B6  50				push eax
 000003B7  58				pop eax
 000003B8  3D 00007FFF			cmp eax, 32767
 000003BD  0F 8F 000000A2		jg overflow
 000003C3  3D FFFF8000			cmp eax, -32768
 000003C8  0F 8C 00000097		jl overflow
 000003CE  A3 0000003C R		mov strchislo76, eax

 000003D3  FF 35 00000034 R	push copystr76
 000003D9  E8 00000000 E	call soutl

 000003DE  FF 35 00000038 R	push dlina76
 000003E4  E8 00000000 E	call noutl

 000003E9  FF 35 0000003C R	push strchislo76
 000003EF  E8 00000000 E	call noutl
 000003F4  FF 35 0000013A R		push short37
 000003FA  58				pop eax
 000003FB  3D 00007FFF			cmp eax, 32767
 00000400  7F 63			jg overflow
 00000402  3D FFFF8000			cmp eax, -32768
 00000407  7C 5C			jl overflow
 00000409  A3 00000040 R		mov i76, eax
 0000040E			cycle1:
 0000040E  A1 00000040 R		mov eax, i76
 00000413  3B 05 0000013E R		cmp eax, short38
 00000419  7D 32			jge cycleEnd1

 0000041B  FF 35 00000040 R	push i76
 00000421  E8 00000000 E	call noutl
 00000426  FF 35 00000040 R		push i76
 0000042C  FF 35 00000142 R		push short39
 00000432  58				pop eax
 00000433  5B				pop ebx
 00000434  03 C3			add eax, ebx
 00000436  50				push eax
 00000437  58				pop eax
 00000438  3D 00007FFF			cmp eax, 32767
 0000043D  7F 26			jg overflow
 0000043F  3D FFFF8000			cmp eax, -32768
 00000444  7C 1F			jl overflow
 00000446  A3 00000040 R		mov i76, eax
 0000044B  EB C1			jmp cycle1
 0000044D			cycleEnd1:
 0000044D  E8 00000000 E		call SYSPAUSE
 00000452  6A 00			push 0
 00000454  E8 00000000 E		call ExitProcess
 00000459			SOMETHINGWRONG::
 00000459  68 00000000 R		push offset null_division
 0000045E  E8 00000000 E		call soutl
 00000463  EB 0A		jmp THEEND
 00000465			overflow::
 00000465  68 00000018 R		push offset OVER_FLOW
 0000046A  E8 00000000 E		call soutl
 0000046F			THEEND:
 0000046F  E8 00000000 E		call SYSPAUSE
 00000474  6A FF			push -1
 00000476  E8 00000000 E		call ExitProcess
 0000047B			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.41.34123.0	    12/17/24 13:20:53
LPA-2024_ASM.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000146 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000044 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000047B Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SYSPAUSE . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strduplicate  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strlength . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
_strtransint . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000083 _TEXT	Length= 000003F8 Public STDCALL
  pravda760T . . . . . . . . . .	L Near	 00000357 _TEXT	
  pravda760F . . . . . . . . . .	L Near	 00000363 _TEXT	
  pravda760  . . . . . . . . . .	L Near	 0000036D _TEXT	
  cycle1 . . . . . . . . . . . .	L Near	 0000040E _TEXT	
  cycleEnd1  . . . . . . . . . .	L Near	 0000044D _TEXT	
  THEEND . . . . . . . . . . . .	L Near	 0000046F _TEXT	
noutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
soutl  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
testfunc11 . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000037 Public STDCALL
  a1 . . . . . . . . . . . . . .	DWord	 bp + 00000008
  b1 . . . . . . . . . . . . . .	DWord	 bp + 0000000C
  local0 . . . . . . . . . . . .	L Near	 00000032 _TEXT	
testfunc22 . . . . . . . . . . .	P Near	 00000037 _TEXT	Length= 00000018 Public STDCALL
  parm12 . . . . . . . . . . . .	DWord	 bp + 00000008
  local1 . . . . . . . . . . . .	L Near	 0000004A _TEXT	
testfunc43 . . . . . . . . . . .	P Near	 0000004F _TEXT	Length= 00000034 Public STDCALL
  chetnoe3 . . . . . . . . . . .	DWord	 bp + 00000008
  local2 . . . . . . . . . . . .	L Near	 0000007E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
OVER_FLOW  . . . . . . . . . . .	Byte	 00000018 CONST	
SOMETHINGWRONG . . . . . . . . .	L Near	 00000459 _TEXT	
a76  . . . . . . . . . . . . . .	DWord	 00000018 _DATA	
b76  . . . . . . . . . . . . . .	DWord	 0000001C _DATA	
bool5  . . . . . . . . . . . . .	DWord	 00000055 CONST	
bt76 . . . . . . . . . . . . . .	DWord	 00000014 _DATA	
copystr76  . . . . . . . . . . .	DWord	 00000034 _DATA	
dlina76  . . . . . . . . . . . .	DWord	 00000038 _DATA	
false  . . . . . . . . . . . . .	Byte	 0000002D CONST	
i76  . . . . . . . . . . . . . .	DWord	 00000040 _DATA	
it76 . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
null_division  . . . . . . . . .	Byte	 00000000 CONST	
number76 . . . . . . . . . . . .	DWord	 00000024 _DATA	
overflow . . . . . . . . . . . .	L Near	 00000465 _TEXT	
parm176  . . . . . . . . . . . .	DWord	 00000020 _DATA	
parm231  . . . . . . . . . . . .	DWord	 00000004 _DATA	
phah57 . . . . . . . . . . . . .	DWord	 00000008 _DATA	
pravda76 . . . . . . . . . . . .	DWord	 00000028 _DATA	
res10  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
short11  . . . . . . . . . . . .	DWord	 00000089 CONST	
short12  . . . . . . . . . . . .	DWord	 0000008D CONST	
short14  . . . . . . . . . . . .	DWord	 0000009A CONST	
short15  . . . . . . . . . . . .	DWord	 0000009E CONST	
short17  . . . . . . . . . . . .	DWord	 000000B6 CONST	
short18  . . . . . . . . . . . .	DWord	 000000BA CONST	
short1 . . . . . . . . . . . . .	DWord	 0000003E CONST	
short20  . . . . . . . . . . . .	DWord	 000000C5 CONST	
short21  . . . . . . . . . . . .	DWord	 000000C9 CONST	
short23  . . . . . . . . . . . .	DWord	 000000D6 CONST	
short24  . . . . . . . . . . . .	DWord	 000000DA CONST	
short25  . . . . . . . . . . . .	DWord	 000000DE CONST	
short27  . . . . . . . . . . . .	DWord	 000000F3 CONST	
short28  . . . . . . . . . . . .	DWord	 000000F7 CONST	
short29  . . . . . . . . . . . .	DWord	 000000FB CONST	
short2 . . . . . . . . . . . . .	DWord	 00000042 CONST	
short32  . . . . . . . . . . . .	DWord	 00000119 CONST	
short33  . . . . . . . . . . . .	DWord	 0000011D CONST	
short34  . . . . . . . . . . . .	DWord	 00000121 CONST	
short37  . . . . . . . . . . . .	DWord	 0000013A CONST	
short38  . . . . . . . . . . . .	DWord	 0000013E CONST	
short39  . . . . . . . . . . . .	DWord	 00000142 CONST	
short3 . . . . . . . . . . . . .	DWord	 00000046 CONST	
short7 . . . . . . . . . . . . .	DWord	 00000072 CONST	
short8 . . . . . . . . . . . . .	DWord	 00000076 CONST	
short9 . . . . . . . . . . . . .	DWord	 0000007A CONST	
st76 . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
str0 . . . . . . . . . . . . . .	Byte	 00000033 CONST	
str10  . . . . . . . . . . . . .	Byte	 0000007E CONST	
str13  . . . . . . . . . . . . .	Byte	 00000091 CONST	
str16  . . . . . . . . . . . . .	Byte	 000000A2 CONST	
str19  . . . . . . . . . . . . .	Byte	 000000BE CONST	
str22  . . . . . . . . . . . . .	Byte	 000000CD CONST	
str26  . . . . . . . . . . . . .	Byte	 000000E2 CONST	
str30  . . . . . . . . . . . . .	Byte	 000000FF CONST	
str31  . . . . . . . . . . . . .	Byte	 0000010F CONST	
str35  . . . . . . . . . . . . .	Byte	 00000125 CONST	
str36  . . . . . . . . . . . . .	Byte	 00000136 CONST	
str4 . . . . . . . . . . . . . .	Byte	 0000004A CONST	
str6 . . . . . . . . . . . . . .	Byte	 00000059 CONST	
strchislo76  . . . . . . . . . .	DWord	 0000003C _DATA	
stroka76 . . . . . . . . . . . .	DWord	 0000002C _DATA	
strokachislo76 . . . . . . . . .	DWord	 00000030 _DATA	
true . . . . . . . . . . . . . .	Byte	 00000028 CONST	

	   0 Warnings
	   0 Errors
